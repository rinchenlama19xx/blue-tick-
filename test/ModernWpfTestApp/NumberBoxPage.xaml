<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<local:TestPage
    x:Class="MUXControlsTestApp.NumberBoxPage"
    x:Name="NumberBoxTestPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:MUXControlsTestApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:controls="http://schemas.modernwpf.com/2019"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    DataContext="{Binding RelativeSource={RelativeSource Self}}">

    <Grid Background="{DynamicResource SystemControlPageBackgroundAltHighBrush}">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Border
            Background="{DynamicResource SystemControlBackgroundBaseLowBrush}"
            Padding="12">
            <controls:SimpleStackPanel
                Orientation="Vertical"
                Spacing="4">

                <ComboBox
                    x:Name="ValidationComboBox"
                    AutomationProperties.Name="ValidationComboBox"
                    controls:ControlHelper.Header="Validation Mode"
                    SelectedIndex="0"
                    SelectionChanged="Validation_Changed">
                    <ComboBoxItem Content="InvalidInputOverwritten" />
                    <ComboBoxItem Content="Disabled" />
                </ComboBox>

                <ComboBox
                    x:Name="SpinModeComboBox"
                    AutomationProperties.Name="SpinModeComboBox"
                    SelectedIndex="0"
                    SelectionChanged="SpinMode_Changed"
                    controls:ControlHelper.Header="SpinButtonMode">
                    <ComboBoxItem Content="Hidden" />
                    <ComboBoxItem Content="Compact" />
                    <ComboBoxItem Content="Inline" />
                </ComboBox>

                <CheckBox
                    x:Name="EnabledCheckBox"
                    AutomationProperties.Name="EnabledCheckBox"
                    IsChecked="True"
                    Content="Enabled" />

                <CheckBox
                    x:Name="ExpressionCheckBox"
                    AutomationProperties.Name="ExpressionCheckBox"
                    IsChecked="False"
                    Content="Accepts Expression" />

                <CheckBox
                    x:Name="WrapCheckBox"
                    AutomationProperties.Name="WrapCheckBox"
                    IsChecked="False"
                    Content="Wrap Enabled" />

                <!-- Set Text instead of Value to verify that it works -->
                <controls:NumberBox
                    x:Name="SmallChangeNumberBox"
                    AutomationProperties.Name="SmallChangeNumberBox"
                    Text="1"
                    Header="SmallChange" />
                <controls:NumberBox
                    x:Name="LargeChangeNumberBox"
                    AutomationProperties.Name="LargeChangeNumberBox"
                    Text="10"
                    Header="LargeChange" />

                <StackPanel Orientation="Horizontal">
                    <CheckBox
                        x:Name="MinCheckBox"
                        AutomationProperties.Name="MinCheckBox"
                        IsChecked="False"
                        Checked="MinCheckBox_CheckChanged"
                        Unchecked="MinCheckBox_CheckChanged"
                        MinWidth="32"
                        VerticalAlignment="Bottom" />
                    <controls:NumberBox
                        x:Name="MinNumberBox"
                        AutomationProperties.Name="MinNumberBox"
                        Header="Minimum"
                        Value="0"
                        IsEnabled="False"
                        ValueChanged="MinValueChanged" />
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <CheckBox
                        x:Name="MaxCheckBox"
                        AutomationProperties.Name="MaxCheckBox"
                        IsChecked="False"
                        Checked="MaxCheckBox_CheckChanged"
                        Unchecked="MaxCheckBox_CheckChanged"
                        MinWidth="32"
                        VerticalAlignment="Bottom" />
                    <!-- Verify that setting Value overrides setting Text -->
                    <controls:NumberBox
                        x:Name="MaxNumberBox"
                        AutomationProperties.Name="MaxNumberBox"
                        Header="Maximum"
                        Value="100"
                        Text="50"
                        IsEnabled="False"
                        ValueChanged="MaxValueChanged" />
                </StackPanel>

                <Button
                    x:Name="CustomFormatterButton"
                    AutomationProperties.Name="CustomFormatterButton"
                    Content="Custom Formatter"
                    Click="CustomFormatterButton_Click"
                    Margin="0,4,0,0" />

                <Button
                    x:Name="SetTextButton"
                    AutomationProperties.Name="SetTextButton"
                    Content="Set text to 15"
                    Click="SetTextButton_Click"
                    Margin="0,4,0,0" />

                <Button
                    x:Name="SetValueButton"
                    AutomationProperties.Name="SetValueButton"
                    Content="Set value to 42"
                    Click="SetValueButton_Click"
                    Margin="0,4,0,0" />

                <Button
                    x:Name="SetValueNaNButton"
                    AutomationProperties.Name="SetValueNaNButton"
                    Content="Set value to NaN"
                    Click="SetNaNButton_Click"
                    Margin="0,4,0,0" />

                <Button
                    x:Name="SetTwoWayBoundValueNaNButton"
                    AutomationProperties.Name="SetTwoWayBoundValueNaNButton"
                    Content="Set two way bound value to NaN"
                    Click="SetTwoWayBoundNaNButton_Click"
                    Margin="0,4,0,0" />
            </controls:SimpleStackPanel>
        </Border>

        <Grid Grid.Column="1">

            <controls:SimpleStackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                Spacing="4">
                <!-- Standard NumberBox test UI -->
                <StackPanel>
                    <controls:NumberBox
                        MinWidth="150"
                        x:Name="TestNumberBox"
                        Header="TestNumberBox"
                        Description="Description text"
                        PlaceholderText="Text"
                        ValueChanged="NumberBoxValueChanged"
                        SmallChange="{Binding Value, ElementName=SmallChangeNumberBox}"
                        LargeChange="{Binding Value, ElementName=LargeChangeNumberBox}"
                        AcceptsExpression="{Binding IsChecked, ElementName=ExpressionCheckBox}"
                        IsWrapEnabled="{Binding IsChecked, ElementName=WrapCheckBox}"
                        IsEnabled="{Binding IsChecked, ElementName=EnabledCheckBox}" />

                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Text="Value:"
                            Margin="0,0,5,0" />
                        <TextBlock
                            x:Name="NewValueTextBox"
                            AutomationProperties.Name="NewValueTextBox"
                            Text="0" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Text="Old Value:"
                            Margin="0,0,5,0" />
                        <TextBlock
                            x:Name="OldValueTextBox"
                            AutomationProperties.Name="OldValueTextBox" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Text="Text:"
                            Margin="0,0,5,0" />
                        <TextBlock
                            x:Name="TextTextBox"
                            AutomationProperties.Name="TextTextBox"
                            Text="{Binding Text, ElementName=TestNumberBox}" />
                    </StackPanel>
                </StackPanel>

                <!-- NumberBox for nested scrolling bug(s) -->
                <StackPanel Margin="30,0,0,0">
                    <TextBlock>NumberBox inside ScrollViewer test</TextBlock>
                    <ScrollViewer
                        x:Name="ScrollviewerWithScroll"
                        Height="50"
                        Width="200"
                        ScrollChanged="ScrollviewerWithScroll_ScrollChanged">
                        <StackPanel>
                            <controls:NumberBox
                                x:Name="NumberBoxInScroller"
                                AutomationProperties.Name="NumberBoxInScroller" />
                            <controls:NumberBox />
                            <controls:NumberBox />
                        </StackPanel>
                    </ScrollViewer>

                    <TextBlock
                        x:Name="VerticalOffsetDisplayBlock"
                        Text="0"
                        AutomationProperties.Name="VerticalOffsetDisplayBlock" />
                </StackPanel>

                <!-- NumberBox two way binding with Binding -->
                <StackPanel>
                    <controls:NumberBox
                        Header="TwoWayBinding"
                        x:Name="TwoWayBoundNumberBox"
                        Value="{Binding DataModelWithINPC.Value, Mode=TwoWay}" />
                    <TextBlock
                        x:Name="TwoWayBoundNumberBoxValue"
                        AutomationProperties.Name="TwoWayBoundNumberBoxValue" />
                </StackPanel>
            </controls:SimpleStackPanel>
        </Grid>

    </Grid>
</local:TestPage>
